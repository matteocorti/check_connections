#!/usr/bin/perl

# RCS information (required by Perl::Critic)
#   $Id$
#   $Revision$
#   $HeadURL$
#   $Date$

use strict;
use warnings;

use Getopt::Long;
use English '-no_match_vars';
use version;

our $VERSION     = '1.2';

my $critical   = 0;
my $help       = q{};
my $result;
my $status     = 0;
my $status_msg = q{};
my $warning    = 0;

##############################################################################
# subroutines

################################
# prints the usage of the plugin
sub usage {

    my $msg = shift;

  if (defined $msg) {
    print "$msg\n";
  }

  print << "EOT";
usage:
  -c crit      critical
  -w warn      warning
  --version    version
EOT

  exit 3;

}

##############################################################################
# main
#

########################
# Command line arguments

$result = GetOptions (
    'critical=i'  => \$critical,
    'warning=i'   => \$warning,
    'help'        => \$help,
    'version'     => sub { print "check_dir version $VERSION\n"; exit 3;}
);

if (!$result) {
  usage();
}

if ($help)                { usage(); }
if ($critical <= 0)       { usage('Could not parse "critical"'); }
if ($warning  <= 0)       { usage('Could not parse "warning"'); }
if ($critical < $warning) { usage('"critical" has to be greater than "warning"'); }

my $command = 'netstat -an | grep ^tcp';
my $output;
my %states;

my $pid = open $output, '<', "$command 2>&1 |" or
    croak "Cannot execute $command";

while (<$output>) {
    chomp;
    if (/tcp.*\s([A-Z_]+)/mx) {
        $states{$1}++;
    }
    else {
        croak "Error: cannot parse netstat output: $OS_ERROR\n";
    }
}

my $total;
my $status = q{};

while ( my ($state,$count) = each %states ) {
    $total += $count;
    $status = $status . q{ } . "$state=$count;;;;";
}

$status = ": $total connections"
    . ' |'
    . " TOTAL=$total;$warning;$critical;;"
    . $status
    . "\n";

close $output or
    croak "Couldn't close: $!";

if ($total < $warning) {
    print 'CONNECTIONS OK'.$status;
    exit 0;
} else {
  if ($total < $critical) {
    print 'CONNECTIONS WARNING'.$status;
    exit 1;
  } else {
    print 'CONNECTIONS CRITICAL'.$status;
    exit 2;
  }
}
